
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
//import java.util.Timer;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Sourabh
 */
public class Map extends javax.swing.JFrame implements MouseListener,Runnable{
    
    int currentpt=0;
    int entrycity =0;   // 0 means city and 1 means placing road and 2 mean place cab
    String query =null;
    Connection con;
    Statement s;
    ResultSet rs ;
    Thread t;
    int locx;
    int locy;
    /**
     * Creates new form Map
     */
    public Map() {
        initComponents();
        this.addMouseListener(this);
        t = new Thread(this,"Demo Thread");
        t.start();
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)));
        jPanel1.setOpaque(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 766, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Place City");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Load City And Place Road");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Place Cab At Initial Pos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setToolTipText("Enter City Name");

        jPanel2.setOpaque(false);

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Place Road");
        jButton4.setOpaque(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Reset Map");
        jButton5.setOpaque(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel3.setOpaque(false);

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Go");
        jButton6.setOpaque(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select Taxi number");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Select City");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel4.setBackground(new java.awt.Color(0, 255, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jPanel4.setForeground(new java.awt.Color(255, 0, 0));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel1.setVisible(true);
        jPanel1.setEnabled(true);
        jTextField1.setEnabled(true);
        entrycity =0;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        drawcar();
        
        entrycity = 1;
        jPanel1.setEnabled(false);
        jPanel1.setVisible(true);
        jPanel2.setVisible(true);
        jPanel3.setVisible(false);
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    query = "SELECT * FROM citylocation";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                        String city = rs.getString("CityName");
                        String locx = rs.getString("LocationX");
                        String locy = rs.getString("LocationY");
                        drawCircle(Integer.parseInt(locx),Integer.parseInt(locy));
                        drawString(Integer.parseInt(locx)-20,Integer.parseInt(locy),city);
                        jComboBox1.addItem(city);
                        jComboBox2.addItem(city);
                    }
                    query ="SELECT * FROM cityroad";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                        int x1 = Integer.parseInt(rs.getString("Location1X"));
                        int y1 = Integer.parseInt(rs.getString("Location1Y"));
                        int x2 = Integer.parseInt(rs.getString("Location2X"));
                        int y2 = Integer.parseInt(rs.getString("Location2Y"));
                        drawLine(x1,y1,x2,y2);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
        jTextField1.setEnabled(false);
        jButton4.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jComboBox3.removeAllItems();
        jComboBox4.removeAllItems();
        drawcar();
       
        jPanel2.setVisible(false);
        jPanel3.setVisible(true);
        entrycity = 2;
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    query = "SELECT CarNo FROM carregistration";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                        jComboBox3.addItem(rs.getString("CarNo"));
                    }
                    query ="SELECT CityName FROM citylocation";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                        jComboBox4.addItem(rs.getString("CityName"));
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int x1 =0,x2=0,y1=0,y2=0;String city1 =null,city2 = null;
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    query = "SELECT * FROM citylocation";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                        String city = rs.getString("CityName");
                        String locx = rs.getString("LocationX");
                        String locy = rs.getString("LocationY");
                        drawCircle(Integer.parseInt(locx),Integer.parseInt(locy));
                        drawString(Integer.parseInt(locx)-20,Integer.parseInt(locy),city);
                    }
                    query ="SELECT * FROM cityroad";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                         x1 = Integer.parseInt(rs.getString("Location1X"));
                         y1 = Integer.parseInt(rs.getString("Location1Y"));
                         x2 = Integer.parseInt(rs.getString("Location2X"));
                         y2 = Integer.parseInt(rs.getString("Location2Y"));
                        drawLine(x1,y1,x2,y2);
                    }
                    query = "SELECT * FROM citylocation WHERE CityName ='"+jComboBox1.getSelectedItem().toString()+"'";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                         city1 = rs.getString("CityName");
                        String locx = rs.getString("LocationX");
                        x1 = Integer.parseInt(locx);
                        System.out.println(x1);
                        String locy = rs.getString("LocationY"); y1 = Integer.parseInt(locy);
                        System.out.println(y1);
                    }
                    query = "SELECT * FROM citylocation WHERE CityName ='"+jComboBox2.getSelectedItem().toString()+"'";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                         city2 = rs.getString("CityName");
                        x2 = Integer.parseInt(rs.getString("LocationX"));
                        y2 = Integer.parseInt(rs.getString("LocationY"));
                    }
                    drawLine(x1,y1,x2,y2);
                    
                    query = "INSERT INTO cityroad (City1, Location1X, Location1Y, City2, Location2X, Location2Y) VALUES ('"+city1+"',"+x1+","+y1+",'"+city2+"',"+x2+","+y2+")";
                    s.executeUpdate(query);
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    query = "TRUNCATE TABLE citylocation";
                    s.executeUpdate(query);
                    query = "TRUNCATE TABLE cityroad";
                    s.executeUpdate(query);
                    
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    String loc = jComboBox4.getSelectedItem().toString();
                    String car = jComboBox3.getSelectedItem().toString();
                    query = "UPDATE carregistration SET Location ='"+loc+"' WHERE CarNo ='"+car+"'";
                    s.executeUpdate(query);
                    query = "SELECT * FROM citylocation WHERE CityName ='"+loc+"'";
                    rs= s.executeQuery(query);
                    while(rs.next()){
                        int x = Integer.parseInt(rs.getString("LocationX"));
                        int y = Integer.parseInt(rs.getString("LocationY"));
                        drawCircleBlue(x-10,y-10);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
        jPanel3.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    public void drawcar(){
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    //String loc = jComboBox4.getSelectedItem().toString();
                    //String car = jComboBox3.getSelectedItem().toString();
                    //query = "UPDATE carregistration SET Location ='"+loc+"' WHERE CarNo ='"+car+"'";
                    //s.executeUpdate(query);
                    System.out.println("SOURABH");
                    query = "SELECT * FROM carregistration";
                    rs= s.executeQuery(query);
                    String carloc[] =new String[50];
                    int carsta[] = new int[50];
                    int no =0;
                    while(rs.next()){
                        carloc[no]=rs.getString("Location");
                        carsta[no]=rs.getInt("Status");
                        no++;
                    }
                    for(int i=0;i<no;i++){
                        query = "SELECT * FROM citylocation WHERE CityName ='"+carloc[i]+"'";
                        rs = s.executeQuery(query);
                        while(rs.next()){
                            int x = Integer.parseInt(rs.getString("LocationX"));
                            int y = Integer.parseInt(rs.getString("LocationY"));
                            drawCircleBlue(x-10,y-10);
                        }
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    public void car(){
        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    System.out.println("SOURABH");
                    query = "SELECT * FROM carregistration WHERE Status ="+1;
                    rs= s.executeQuery(query);
                    String carloc[] =new String[50];
                    String carsdes[] = new String[50];
                    int no =0;
                    while(rs.next()){
                        carloc[no]=rs.getString("Location");
                        carsdes[no]=rs.getString("DestinationOfCar");
                        no++;
                    }
                    int desx=0,desy=0;
                    for(int i=0;i<no;i++){
                        query = "SELECT * FROM citylocation WHERE CityName ='"+carloc[i]+"'";
                        rs = s.executeQuery(query);
                        while(rs.next()){
                            locx = Integer.parseInt(rs.getString("LocationX"));
                            locy = Integer.parseInt(rs.getString("LocationY"));
                            
                        }
                        query = "SELECT * FROM citylocation WHERE CityName ='"+carsdes[i]+"'";
                        rs = s.executeQuery(query);
                        while(rs.next()){
                            desx = Integer.parseInt(rs.getString("LocationX"));
                            desy = Integer.parseInt(rs.getString("LocationY"));
                            
                        }
                        float slope = 0;
                        if((desx-locx)!=0)
                            slope =(desy-locy)/(desx-desy);
                        else
                            slope =0;
                        locx=locx+5;
                        
                        drawCircleBlue((locx+5),(locy+5));
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Map s = new Map();
                ImagePanel panel = new ImagePanel(new ImageIcon("taxi8.jpg").getImage());
                s.getContentPane().add(panel);
                ClockLabel c = new ClockLabel();
                
                s.jPanel4.add(c);
                
                s.pack();
                s.setVisible(true);
                s.jPanel1.setVisible(false);
                //new Map().setVisible(true);
                s.jTextField1.setEnabled(false);
                s.jPanel2.setVisible(false);
                s.jButton4.setVisible(false);
                s.jPanel3.setVisible(false);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        System.out.println(e.getX()+" "+e.getY());
        if(jPanel1.isVisible()&&jPanel1.isEnabled()&&e.getX()>511){
            int xcord = e.getX();
            int ycord = e.getY();
            if(entrycity ==0){
                System.out.println(xcord+" "+ycord);
                String cityname = jTextField1.getText();
                System.out.println(cityname);
                if(!cityname.equals("")){
                   
                    drawCircle(xcord, ycord);
                    
                    currentpt++;
                    try {
            // TODO add your handling code here:
                    Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                    try {
                        con = DriverManager.getConnection("jdbc:odbc:test","root","");
                        s = con.createStatement();
                        query = "INSERT INTO citylocation (CityName, LocationX, LocationY) VALUES('"+jTextField1.getText()+"','"+xcord+"','"+ycord+"')";
                        s.executeUpdate(query);
                    } catch (SQLException ex) {
                        Logger.getLogger(CustomerRegistration.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(CustomerRegistration.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    }
                else{
                    JOptionPane.showMessageDialog(rootPane,"Please Enter City Name");
                    for(int i=0;i<currentpt;i++){
                        //drawCircle(points[i][0],points[i][1]);
                        try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                try {
                    con = DriverManager.getConnection("jdbc:odbc:test","root","");
                    s = con.createStatement();
                    query = "SELECT * FROM citylocation";
                    rs = s.executeQuery(query);
                    while(rs.next()){
                        String city = rs.getString("CityName");
                        String locx = rs.getString("LocationX");
                        String locy = rs.getString("LocationY");
                        drawCircle(Integer.parseInt(locx),Integer.parseInt(locy));
                        
                        
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegisterCar.class.getName()).log(Level.SEVERE, null, ex);
            }
                        System.out.println("dadad");
                    }
                }
                jTextField1.setText("");
            }
            else if(entrycity == 2){
                
            }
       }
    }
    /*public void drawCircle(int x, int y) {
        Graphics g = this.getGraphics();
        g.drawOval(x, y, 6, 6);
        g.setColor(Color.BLACK);
        g.fillOval(x, y, 6, 6);
    }
    public void drawCircleBlue(int x, int y) {
        Graphics g = this.getGraphics();
        g.drawOval(x, y, 6, 6);
        g.setColor(Color.BLUE);
        g.fillOval(x, y, 6, 6);
    }
    public void drawString(int a , int b , String str){
        Graphics g = this.getGraphics();
        g.drawString(str, a, b);
    }
    public void drawLine(int x1 , int y1 , int x2 , int y2){
        Graphics g = this.getGraphics();
        g.drawLine(x1, y1, x2, y2);
    }*/
     public void drawCircle(int x, int y) {
        Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
        /*Shape theCircle = new Ellipse2D.Double(x-8, y-8, 16, 16);
     //   g2d.drawOval(x, y, 15, 15);
          g2d.setColor(Color.blue);
    //      g2d.fillOval(x-8, y-8, 16, 16);
          g2d.draw(theCircle);
          g2d.setColor(Color.red);
          g2d.fill(theCircle);*/
        Image ic = new ImageIcon("map.png").getImage();
        g2d.drawImage(ic, x-8, y-8, rootPane);
    }
    public void drawCircleBlue(float x , float y){
        Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
        //Shape theCircle = new Ellipse2D.Double(x-8, y-8, 16, 16);
        //Shape t = new Rectangle2D.Double(x-8, y-8, 10, 10);
        Image ic = new ImageIcon("freecar.png").getImage();
        int x1 = (int) x;
        int y1 = (int)y;
        g2d.drawImage(ic, x1, y1, rootPane);
    }
    public void drawCircleBlue(int x, int y) {
        Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
        //Shape theCircle = new Ellipse2D.Double(x-8, y-8, 16, 16);
        //Shape t = new Rectangle2D.Double(x-8, y-8, 10, 10);
        Image ic = new ImageIcon("freecar.png").getImage();
        g2d.drawImage(ic, x+25, y+25, rootPane);
     //   g2d.drawOval(x, y, 15, 15);
          //g2d.setColor(Color.blue);
    //      g2d.fillOval(x-8, y-8, 16, 16);
          //g2d.draw(t);
          //g2d.setColor(Color.cyan);
          //g2d.fill(t);
    }
    public void drawString(int a , int b , String str){
        Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        g2d.setColor(Color.WHITE);
        g2d.drawString(str, a, b);
    }
    public void drawLine(int x1 , int y1 , int x2 , int y2){
        Graphics g = this.getGraphics();
        Graphics2D g2d = (Graphics2D)g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setPaint(Color.green);
        Shape line = new Line2D.Double(x1,y1,x2,y2);
        g2d.draw(line);
  //      g.drawLine(x1, y1, x2, y2);
    }
    @Override
    public void mousePressed(MouseEvent e) {
       // throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void run() {
       
        // throw new UnsupportedOperationException("Not supported yet.");
        while(true){
            car();
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(Map.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

   

}
class ImagePanel extends JPanel {

  private Image img;

  public ImagePanel(String img) {
    this(new ImageIcon(img).getImage());
  }

  public ImagePanel(Image img) {
    this.img = img;
    Dimension size = new Dimension(img.getWidth(null), img.getHeight(null));
    setPreferredSize(size);
    setMinimumSize(size);
    setMaximumSize(size);
    setSize(size);
    setLayout(null);
  }

  public void paintComponent(Graphics g) {
 //   super.paintComponent(g); 
//    Graphics2D g1= (Graphics2D) g;
 //   g1.drawOval(600, 200, 20, 20);
    g.drawImage(img, 0, 0, null);
 //   this.repaint();
  }}
class ClockLabel extends JLabel implements ActionListener {
  public ClockLabel() {
    super("" + new Date());
    Timer t = new Timer(1000, this);    
    t.start( );
     setSize(300, 100);
  }
  public void actionPerformed(ActionEvent ae) {
    setText((new Date( )).toString());
  }  
}